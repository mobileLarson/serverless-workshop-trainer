AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: serverless workshop (by open knowledge)

Parameters:
  AppName:
    Type: String
    Description: Application name
    Default: 'ServerlessWorkshop'
  AppPrefix:
    Type: String
    Description: Application prefix
    Default: 'ok.sw.'
  Service:
    Type: String
    Description: Service name
    Default: 'core'
  LogRetentionInDays:
    Type: Number
    Default: 14
    Description: CloudWatch Logs retention period
  TimeInterval:
    Type: Number
    Description: Time interval of buckets (mins)
    Default: 5
  CodeLength:
    Type: Number
    Description: Code length in characters
    Default: 10
  TokensPerBucket:
    Type: Number
    Description: Tokens in each bucket
    Default: 10
  Source:
    Type: String
    Description: Event bus source by application
    Default: 'ok.serverlessworkshop'

Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type'"
      AllowMethods: "'GET,OPTIONS'"

Resources:

  ##########################################
  # dynamoDB tables                        #
  # - order table                          #
  # - counting table                       #
  # - config table                         #
  ##########################################

  ## Order Table - DynamoDB
  orderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sw-order-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: orderNo
          AttributeType: N
        - AttributeName: state
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: drink
          AttributeType: S
        - AttributeName: barista
          AttributeType: S

      KeySchema:
        - AttributeName: PK
          KeyType: HASH

  ## Counting Table - DynamoDB
  countingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sw-order-counter-table
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: currentValue
          AttributeType: N
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ## Config Table - DynamoDB
  configTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sw-config-table
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S

      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ##########################################
  # Order Processor IAM ROLE               #
  ##########################################

  swOrderManagementRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  RolePolicies:

    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "orderManagementPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          # cloud watch
          - Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"

            # event bus
          - Effect: "Allow"
            Action: "events:PutEvents"
            Resource: "arn:aws:events:*:*:event-bus/sw-event-bus"
            # Resource: "arn:aws:events:eu-central-1:460357271599:event-bus/sw-event-bus"
            #Resource: !GetAtt ServerlesspressoEventBus.Arn

            # config table
          - Effect: "Allow"
            Action:
              - "dynamodb:Get*"
              - "dynamodb:Update*"
              - "dynamodb:PutItem"
            Resource: "arn:aws:dynamodb:*:*:table/sw-config-table"
            #"arn:aws:dynamodb:eu-central-1:460357271599:table/sw-config-table"
            # Resource: !GetAtt ConfigTable.Arn

            # config table
          - Effect: "Allow"
            Action:
              - "dynamodb:Get*"
              - "dynamodb:Update*"
              - "dynamodb:PutItem"
            Resource: "arn:aws:dynamodb:*:*:table/sw-order-counter-table"
            #"arn:aws:dynamodb:eu-central-1:460357271599:table/sw-order-counter-table"
            # Resource: !GetAtt CounterTable.Arn

            # order table
          - Effect: "Allow"
            Action:
              - "dynamodb:Get*"
              - "dynamodb:Query"
              - "dynamodb:Scan"
              - "dynamodb:Delete*"
              - "dynamodb:Update*"
              - "dynamodb:PutItem"
            Resource: "arn:aws:dynamodb:*:*:table/sw-order-table"
            #"arn:aws:dynamodb:eu-central-1:460357271599:table/sw-config-table"
            # Resource: !GetAtt OrderTable.Arn
      Roles:
        - Ref: "swOrderManagementRole"

  ##########################################
  # Order Processor IAM ROLE               #
  ##########################################

  swOrderProcessorRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "states.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "orderProcessorWFPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "events:PutEvents"
            Resource: "arn:aws:events:eu-central-1:460357271599:event-bus/sw-event-bus"
            #Resource: !GetAtt ServerlesspressoEventBus.Arn
          - Effect: "Allow"
            Action: "dynamodb:GetItem"
            Resource: "arn:aws:dynamodb:eu-central-1:460357271599:table/sw-config-table"
            # Resource: !GetAtt ConfigTable.Arn
          - Effect: "Allow"
            Action: "dynamodb:UpdateItem"
            Resource: "arn:aws:dynamodb:eu-central-1:460357271599:table/sw-config-table"
            # Resource: !GetAtt ConfigTable.Arn
          - Effect: "Allow"
            Action: "dynamodb:UpdateItem"
            Resource: "arn:aws:dynamodb:eu-central-1:460357271599:table/sw-config-table"
            # Resource: !GetAtt ConfigTable.Arn
          - Effect: "Allow"
            Action: "states:ListExecutions"
            Resource: !Join [ "", [ "arn:aws:states:", "eu-central-1", ":", "460357271599", ":stateMachine:", "*"] ]
            # Resource: !Join [ "", [ "arn:aws:states:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":stateMachine:", "*"] ]

      Roles:
        - Ref: "swOrderProcessorRole"


##########################################
# Outputs                                #
##########################################

  OrderTable:
    Description: Order table created with this template
    Value: !Ref orderTable

  CountingTable:
    Description: Counting table created with this template
    Value: !Ref countingTable

  ConfigTable:
    Description: Counting table created with this template
    Value: !Ref configTable
